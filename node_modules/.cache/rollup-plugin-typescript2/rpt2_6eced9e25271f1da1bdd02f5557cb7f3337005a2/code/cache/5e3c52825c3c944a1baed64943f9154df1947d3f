{"code":"import { __decorate } from \"tslib\";\nimport { LitElement, html, css } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators.js\";\nimport { findEntities } from \"./common/find-entities\";\nconst validEntityId = /^(\\w+)\\.(\\w+)$/;\nconst isValidEntityId = (entityId) => validEntityId.test(entityId);\nlet ERHVCard = class ERHVCard extends LitElement {\n    static getConfigElement() {\n        return document.createElement(\"erhv-card-editor\");\n    }\n    static getStubConfig(hass, entities, entitiesFill) {\n        const includeDomains = [\"climate\"];\n        const maxEntities = 1;\n        const foundEntities = findEntities(hass, maxEntities, entities, entitiesFill, includeDomains);\n        // Return a minimal configuration that will result in a working card configuration\n        return { climate_entity: foundEntities[0] || \"\" };\n    }\n    setConfig(config) {\n        if (!config.entity) {\n            throw new Error(\"Entity must be specified\");\n        }\n        if (config.entity && !isValidEntityId(config.entity)) {\n            throw new Error(\"Invalid entity\");\n        }\n        this._config = config;\n        if (this._config.footer) {\n            // this._footerElement = createHeaderFooterElement(this._config.footer);\n        }\n        else if (false) {\n            // this._footerElement = undefined;\n        }\n    }\n    render() {\n        if (!this.hass || !this._config) {\n            return html `Custom card not found!`;\n        }\n        const stateObj = this.hass.states[this._config.climate_entity];\n        if (!stateObj) {\n            return html `\r\n                <ha-card>Unknown entity: ${this._config.climate_entity}</ha-card> `;\n        }\n        const name = this._config.name || \"NoName\";\n        return html `\r\n            <ha-card>\r\n                    <!--<p class=\"title\">${name}</p>-->\r\n                <div class=\"container\">\r\n                    <div id=\"bg\">\r\n                        <svg viewBox=\"0 0 850 360\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                             xmlns:xlink=\"http://www.w3.org/1999/xlink\">\r\n                            <defs>\r\n                                <linearGradient id=\"redblue\">\r\n                                    <stop stop-color=\"#acc0e5\" offset=\"0\"/>\r\n                                    <stop stop-color=\"#fd7c7a\" offset=\"1\"/>\r\n                                </linearGradient>\r\n                                <path id=\"arrow\"\r\n                                      d=\"m20 39.051h38.019v7.0848l14.228-14.228-14.228-14.228v7.0848h-38.019z\"/>\r\n                                <!-- to work around safari issues -->\r\n                                <path id=\"fan\" class=\"primary-path\" d=\"M12,11A1,1 0 0,0 11,12A1,1 0 0,0 12,13A1,1 0 0,0 13,12A1,1 0 \r\n                0,0 12,11M12.5,2C17,2 17.11,5.57 14.75,6.75C13.76,7.24 13.32,8.29 13.13,9.22C13.61,9.42 14.03,9.73 \r\n                14.35,10.13C18.05,8.13 22.03,8.92 22.03,12.5C22.03,17 18.46,17.1 17.28,14.73C16.78,13.74 15.72,13.3 \r\n                14.79,13.11C14.59,13.59 14.28,14 13.88,14.34C15.87,18.03 15.08,22 11.5,22C7,22 6.91,18.42 9.27,\r\n                17.24C10.25,16.75 10.69,15.71 10.89,14.79C10.4,14.59 9.97,14.27 9.65,13.87C5.96,15.85 2,15.07 2,\r\n                11.5C2,7 5.56,6.89 6.74,9.26C7.24,10.25 8.29,10.68 9.22,10.87C9.41,10.39 9.73,9.97 10.14,9.65C8.15,5.96 8.94,\r\n                2 12.5,2Z\">\r\n                                </path>\r\n                                <path id=\"speedometer\" class=\"primary-path\" d=\"M12,16A3,3 0 0,1 9,13C9,11.88 9.61,10.9 10.5,10.39L20.21,4.77L14.68,14.35C14.18,15.33 \r\n                13.17,16 12,16M12,3C13.81,3 15.5,3.5 16.97,4.32L14.87,5.53C14,5.19 13,5 12,5A8,8 0 0,0 4,13C4,15.21 4.89,17.21 6.34,\r\n                18.65H6.35C6.74,19.04 6.74,19.67 6.35,20.06C5.96,20.45 5.32,20.45 4.93,20.07V20.07C3.12,18.26 2,15.76 2,13A10,10 0 0,\r\n                1 12,3M22,13C22,15.76 20.88,18.26 19.07,20.07V20.07C18.68,20.45 18.05,20.45 17.66,20.06C17.27,19.67 17.27,19.04 17.66,\r\n                18.65V18.65C19.11,17.2 20,15.21 20,13C20,12 19.81,11 19.46,10.1L20.67,8C21.5,9.5 22,11.18 22,13Z\">\r\n                                </path>\r\n                            </defs>\r\n                            <g transform=\"translate(5,15)\">\r\n                                <g class=\"bg\">\r\n                                    <g transform=\"translate(-.0029998 -30.999)\">\r\n                                        <path\r\n                                                d=\"m2.348 64.937h167.97l509.83 202.06 156.51 0.34732-0.29513 59.47-167.59 0.2448-510.45-202.92h-155.97z\"\r\n                                                fill=\"url(#redblue)\" stroke=\"#000\" stroke-linejoin=\"round\"\r\n                                                stroke-width=\"2\"/>\r\n                                        <path\r\n                                                d=\"m2.348 327.06h167.97l509.83-202.06 156.51-0.34732-0.29513-59.47-167.59-0.2448-510.45 202.92h-155.97z\"\r\n                                                fill=\"url(#redblue)\" stroke=\"#000\" stroke-linejoin=\"round\"\r\n                                                stroke-width=\"2\"/>\r\n                                        <g transform=\"translate(0,62)\" fill=\"#fff\">\r\n                                            <use xlink:href='#arrow'/>\r\n                                            <use transform=\"translate(840,0) scale(-1,1)\" xlink:href='#arrow'/>\r\n                                            <use transform=\"translate(750,203)\" xlink:href='#arrow'/>\r\n                                            <use transform=\"translate(91,203) scale(-1,1)\" xlink:href='#arrow'/>\r\n                                        </g>\r\n                                    </g>\r\n                                </g>\r\n                        </svg>\r\n                    </div>\r\n\r\n                    <div id=\"left\">\r\n                        <!-- start intake -->\r\n                        <div id=\"intake\">\r\n                            <svg viewBox=\"0 0 212.5 180\">\r\n                                <text font-size=\"24px\" x=\"10\" y=\"35\">\r\n                                    ${this.hass.states[this._config.intake_temperature].state}째C\r\n                                </text>\r\n                                <text font-size=\"24px\" x=\"54\" y=\"135\">\r\n                                    ${this.hass.states[this._config.intake_fan_speed_rpm].state} rpm\r\n                                </text>\r\n                                <g transform=\"translate(10, 110) scale(0.2, 0.2)\">\r\n                                    <svg preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\" role=\"img\"\r\n                                         aria-hidden=\"true\" viewBox=\"0 0 24 24\" class=\"icon\">\r\n                                        <g>\r\n                                            <use xlink:href='#speedometer'/>\r\n                                        </g>\r\n                                    </svg>\r\n                                </g>\r\n                            </svg>\r\n                        </div>\r\n                        <!-- end intake -->\r\n\r\n                        <!-- start exhaust -->\r\n                        <div id=\"exhaust\">\r\n                            <svg viewBox=\"0 0 212.5 180\">\r\n                                <text font-size=\"24px\" x=\"10\" y=\"58\">\r\n                                    ${this.hass.states[this._config.exhaust_temperature].state}째C\r\n                                </text>\r\n                                <text font-size=\"24px\" x=\"54\" y=\"158\">\r\n                                    ${Math.trunc(Number(this.hass.states[this._config.exhaust_fan_speed_rpm].state))} rpm\r\n                                </text>\r\n                                <g transform=\"translate(10, 133) scale(0.2, 0.2)\">\r\n                                    <svg preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\" role=\"img\"\r\n                                         aria-hidden=\"true\" viewBox=\"0 0 24 24\" class=\"icon\">\r\n                                        <g>\r\n                                            <use xlink:href='#speedometer'/>\r\n                                        </g>\r\n                                    </svg>\r\n                                </g>\r\n                            </svg>\r\n                        </div>\r\n                        <!-- end exhaust -->\r\n                    </div>\r\n                    <!-- end left column -->\r\n\r\n                    <!-- start center column -->\r\n                    <div id=\"center\">\r\n                        <div id=\"target_temperature\">\r\n                            <svg viewBox=\"0 0 80 40\">\r\n                                <text x=\"50%\" dx=\"1\" y=\"25%\" text-anchor=\"middle\" style=\"font-size:13px\">\r\n                                    ${this.hass.states[this._config.climate_entity].attributes.temperature}\r\n                                    <tspan dx=\"-3\" dy=\"-6.5\" style=\"font-size:4px\">째C</tspan>\r\n                                </text>\r\n                            </svg>\r\n                        </div>\r\n                    </div>\r\n                    <!-- end center column -->\r\n\r\n                    <!-- start right column -->\r\n                    <div id=\"right\" class=\"right\">\r\n                        <!-- start return -->\r\n                        <div id=\"return\">\r\n                            <svg viewBox=\"0 0 212.5 180\">\r\n                                <text font-size=\"24px\" x=\"204.5\" y=\"35\" text-anchor=\"end\">\r\n                                    ${this.hass.states[this._config.return_temperature].state}째C\r\n                                </text>\r\n                                <text font-size=\"24px\" x=\"160\" y=\"135\" text-anchor=\"end\">\r\n                                    ${Math.trunc(Number(this.hass.states[this._config.exhaust_fan_speed_percentage].state))}%\r\n                                </text>\r\n                                <g transform=\"translate(160, 110) scale(0.2, 0.2)\">\r\n                                    <svg preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\" role=\"img\"\r\n                                         aria-hidden=\"true\" viewBox=\"0 0 24 24\" class=\"icon\">\r\n                                        <g>\r\n                                            <use xlink:href='#fan'/>\r\n                                        </g>\r\n                                    </svg>\r\n                                </g>\r\n                            </svg>\r\n                        </div>\r\n                        <!-- end return -->\r\n\r\n                        <!-- start supply -->\r\n                        <div id=\"supply\">\r\n                            <svg viewBox=\"0 0 212.5 180\">\r\n                                <text font-size=\"24px\" x=\"204.5\" y=\"58\" text-anchor=\"end\">\r\n                                    ${this.hass.states[this._config.supply_temperature].state}째C\r\n                                </text>\r\n                                <text font-size=\"24px\" x=\"160\" y=\"158\" text-anchor=\"end\">\r\n                                    ${Math.trunc(Number(this.hass.states[this._config.intake_fan_speed_percentage].state))}%\r\n                                </text>\r\n                                <g transform=\"translate(160, 133) scale(0.2, 0.2)\">\r\n                                    <svg preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\" role=\"img\"\r\n                                         aria-hidden=\"true\" viewBox=\"0 0 24 24\" class=\"icon\">\r\n                                        <g>\r\n                                            <use xlink:href='#fan'/>\r\n                                        </g>\r\n                                    </svg>\r\n                                </g>\r\n                            </svg>\r\n                        </div>\r\n                        <!-- end supply -->\r\n                    </div>\r\n                    <!-- end right column -->\r\n                </div>\r\n                <!-- end container -->\r\n\r\n                <div id=\"info\">\r\n                    <div id=\"modes\">\r\n                        ${this.getAirFilterTmpl()}\r\n                        ${this.getPreHeatTmpl()}\r\n                        ${this.getSummerModeTmpl()}\r\n                        ${this.getBypassTmpl()}\r\n                    </div>\r\n                </div>\r\n            </ha-card>\r\n        `;\n    }\n    //  getFanTmpl() {\n    //    if (this.hass.states['binary_sensor.supply_fan'].state == 'on') {\n    //      return html `<ha-icon icon=\"mdi:fan\"></ha-icon>`;\n    //    } else {\n    //      return html `<ha-icon class=\"inactive\" icon=\"mdi:fan\"></ha-icon>`;\n    //    }\n    //  }\n    getAirFilterTmpl() {\n        if (!this.hass || !this._config || !this._config.filter_warning) {\n            return html ``;\n        }\n        if (this.hass.states[this._config.filter_warning].state != 'on') {\n            return html `\r\n                <ha-icon class=\"inactive\" icon=\"mdi:air-filter\"></ha-icon>`;\n        }\n        else {\n            return html `\r\n                <ha-icon class=\"warning\" icon=\"mdi:air-filter\"></ha-icon>`;\n        }\n    }\n    getBypassTmpl() {\n        if (!this.hass || !this._config || !this._config.bypass_state) {\n            return html ``;\n        }\n        if (this.hass.states[this._config.bypass_state].state == 'on') {\n            return html `\r\n                <ha-icon icon=\"mdi:electric-switch\"></ha-icon>`;\n        }\n        else {\n            return html `\r\n                <ha-icon class=\"inactive\" icon=\"mdi:electric-switch\"></ha-icon>`;\n        }\n    }\n    getPreHeatTmpl() {\n        if (!this.hass || !this._config || !this._config.preheater_state) {\n            return html ``;\n        }\n        if (this.hass.states[this._config.preheater_state].state == 'on') {\n            return html `\r\n                <ha-icon icon=\"mdi:radiator\"></ha-icon>`;\n        }\n        else {\n            return html `\r\n                <ha-icon icon=\"mdi:radiator-off\"></ha-icon>`;\n        }\n    }\n    getSummerModeTmpl() {\n        var _a;\n        if (!this.hass || !this._config || !this._config.summer_mode) {\n            return html ``;\n        }\n        if (this.hass.states[(_a = this._config) === null || _a === void 0 ? void 0 : _a.summer_mode].state == 'off') {\n            return html `\r\n                <ha-icon icon=\"mdi:snowflake\" style=\"color: cyan;\"></ha-icon>`;\n        }\n        else {\n            return html `\r\n                <ha-icon class=\"s   ummer\" icon=\"mdi:weather-sunny\"></ha-icon>`;\n        }\n    }\n    // The height of your card. Home Assistant uses this to automatically\n    // distribute all cards over the available columns.\n    getCardSize() {\n        return 7;\n    }\n    static get styles() {\n        return css `\r\n          text {\r\n            fill: var(--primary-text-color);\r\n          }\r\n\r\n          .container {\r\n          }\r\n\r\n          #winter_icon {\r\n            color: var(--cyan-color);\r\n          }\r\n          \r\n          #left {\r\n            position: absolute;\r\n            top: 0px;\r\n            left: 0px;\r\n            width: 25%;\r\n            height: 100%;\r\n          }\r\n\r\n          #center {\r\n            position: absolute;\r\n            width: 50%;\r\n            height: calc(100% - 40px);\r\n            box-sizing: border-box;\r\n            border-radius: 100%;\r\n            left: 25%;\r\n            top: 20px;\r\n            text-align: center;\r\n            overflow-wrap: break-word;\r\n            pointer-events: none;\r\n            min-width: 150px;\r\n          }\r\n\r\n          #right {\r\n            position: absolute;\r\n            top: 0px;\r\n            right: 0px;\r\n            width: 25%;\r\n            height: 100%;\r\n          }\r\n\r\n          #info {\r\n            justify-content: center;\r\n            text-align: center;\r\n            padding: 16px;\r\n            margin-top: -60px;\r\n            font-size: var(--name-font-size);\r\n          }\r\n\r\n          #modes .selected-icon {\r\n            color: var(--mode-color);\r\n          }\r\n\r\n          #modes {\r\n            color: var(--disabled-text-color);\r\n            cursor: pointer;\r\n            display: inline-block;\r\n          }\r\n\r\n          #intake {\r\n            height: 50%;\r\n          }\r\n\r\n          #return {\r\n            height: 50%\r\n          }\r\n\r\n          #intake_fan_speed {\r\n          }\r\n\r\n          #outside_temperature {\r\n          }\r\n\r\n          #exhaust {\r\n            height: 50%;\r\n          }\r\n\r\n          #supply {\r\n            height: 50%\r\n          }\r\n\r\n          .fan-speed {\r\n            margin-top: 35px;\r\n          }\r\n\r\n          .right {\r\n            text-align: right;\r\n          }\r\n\r\n          .bg {\r\n            background-size: contain;\r\n            background-repeat: no-repeat;\r\n            background-position-y: center;\r\n          }\r\n\r\n          .not-found {\r\n            background-color: yellow;\r\n            font-family: sans-serif;\r\n            font-size: 14px;\r\n          }\r\n\r\n          .col-center {\r\n            font-size: xxx-large;\r\n            font-weight: bold;\r\n            max-width: 100%;\r\n            margin: auto;\r\n            width: 100px;\r\n          }\r\n\r\n          .col-out {\r\n            text-anchor: start;\r\n            font-size: xx-large;\r\n          }\r\n\r\n          .col-in {\r\n            text-anchor: end;\r\n            font-size: xx-large;\r\n          }\r\n\r\n          .fan-state {\r\n            padding-top: 15px;\r\n          }\r\n\r\n          .icon-right {\r\n            margin-left: 20px\r\n          }\r\n\r\n          .info-row {\r\n            background: rgba(0, 0, 0, 0.2);\r\n            margin-top: 10px;\r\n            padding: 5px;\r\n            border-top: rgba(0, 0, 0, 0.4);\r\n            -webkit-box-shadow: 0px -4px 3px rgba(50, 50, 50, 0.75);\r\n            -moz-box-shadow: 0px -4px 3px rgba(50, 50, 50, 0.75);\r\n            box-shadow: 0px -2.5px 3px rgba(0, 0, 0, 0.4);\r\n            display: flex;\r\n            justify-content: space-around;\r\n          }\r\n\r\n          .inactive {\r\n            opacity: 0.7;\r\n          }\r\n\r\n          .warning {\r\n            color: var(--state-binary_sensor-problem-on-color);\r\n          }\r\n\r\n          .icon {\r\n            fill: currentColor;\r\n          }\r\n\r\n          .medium_icon {\r\n          }\r\n\r\n          .large_icon {\r\n          }\r\n\r\n          .label {\r\n          }\r\n\r\n          .large_label {\r\n          }\r\n\r\n          .sensor {\r\n            vertical-align: middle;\r\n            text-align: center;\r\n            width: 200px;\r\n            height: 50px;\r\n          }\r\n\r\n          .entity {\r\n            width: 270px;\r\n            height: 80px;\r\n            vertical-align: bottom;\r\n            position: relative;\r\n            margin: auto;\r\n            padding-left: 25px;\r\n            padding-right: 25px;\r\n          }\r\n\r\n          .spin_supply {\r\n            transform-box: fill-box;\r\n            transform-origin: 50% 50%;\r\n            animation: spin 1s linear infinite;\r\n            fill: white;\r\n            stroke: white;\r\n          }\r\n\r\n          .spin_extract {\r\n            transform-box: fill-box;\r\n            transform-origin: 50% 50%;\r\n            animation: spin 1s linear infinite;\r\n            fill: white;\r\n            stroke: white;\r\n          }\r\n\r\n          @keyframes spin {\r\n            100% {\r\n              transform: rotate(360deg);\r\n            }\r\n          }`;\n    }\n};\n__decorate([\n    property({ attribute: false })\n], ERHVCard.prototype, \"hass\", void 0);\n__decorate([\n    state()\n], ERHVCard.prototype, \"_config\", void 0);\nERHVCard = __decorate([\n    customElement(\"erhv-card\")\n], ERHVCard);\nexport { ERHVCard };\n","references":["C:/Users/jeco/Dev/erhv-lovelace/node_modules/lit/index.d.ts","C:/Users/jeco/Dev/erhv-lovelace/node_modules/lit/decorators.d.ts","C:/Users/jeco/Dev/erhv-lovelace/node_modules/custom-card-helpers/dist/index.d.ts","C:/Users/jeco/Dev/erhv-lovelace/src/common/find-entities.ts","C:/Users/jeco/Dev/erhv-lovelace/src/types.ts"]}
